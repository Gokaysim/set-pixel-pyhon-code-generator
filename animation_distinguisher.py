def get_animation():
    s = "\nint AnimationFrameDelay(short i)"
    s += "\n{"
    s += "\n\tshort animation_length_index = animation_name_length[i];"
    s += "\n\tchar current_animation[animation_length_index];"
    s += "\n\tstrcpy(current_animation, included_animations[i]);"
    s += "\n\tint animation_delay_time = 400000;"
    s += '\n\n\tif(strcmp(current_animation, "anime_fight") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "bavaria") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "birds") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 400000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "color_shift") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 650000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "dove") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 300000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "ellipse") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 450000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "explosion") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 250000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "faded_rainbow") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "flames") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "fur") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "hexagons") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 650000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "infinity") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 350000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "inova_logo") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "inova_logo_prep") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 500000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "newyear") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 400000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "pokemon") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 600000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "rainbow_wave") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 350000;'
    s += '\n\t}'
    s += '\n\telse if(strcmp(current_animation, "spiral_fullscreen") == 0)'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 350000;'
    s += '\n\t}'
    s += '\n\telse'
    s += '\n\t{'
    s += '\n\t\tanimation_delay_time = 400000;'
    s += '\n\t}'
    s += "\n\n\treturn animation_delay_time;"
    s += "\n}\n"

    return s
